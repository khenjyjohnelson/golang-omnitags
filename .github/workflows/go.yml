name: Go

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

jobs:
  dev_deploy:
    runs-on: [self-hosted, development]
    if: github.ref == 'refs/heads/dev'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.24'

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        SHORT_SHA=${GITHUB_SHA:0:7}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/ltt-be:v1.0.dev-$SHORT_SHA .
        docker push ${{ secrets.DOCKER_USERNAME }}/ltt-be:v1.0.dev-$SHORT_SHA

    - name: Deploy container
      run: |
        SHORT_SHA=${GITHUB_SHA:0:7}
        if [ "$(docker ps -aq -f name=ltt-be)" ]; then
          docker stop ltt-be
          docker rm ltt-be
        fi
        # Check if all required environment variables are set
        if [ -z "${{ secrets.APITOKEN }}" ] || [ -z "${{ secrets.JWTSECRET }}" ] || [ -z "${{ vars.APPNAME }}" ] || [ -z "${{ vars.APPENV }}" ]; then
          echo "One or more required environment variables are missing."
          exit 1
        fi
        docker run --name=ltt-be -d -p 19091:19091 \
          --env=APPNAME=${{ vars.APPNAME }} \
          --env=APITOKEN=${{ secrets.APITOKEN }} \
          --env=APPENV=${{ vars.APPENV }} \
          --env=JWTSECRET=${{ secrets.JWTSECRET }} \
          --env=APPENV=${{ vars.APPENV }} \
          --env=APPPORT=${{ vars.APPPORT }} \
          --env=GINMODE=${{ vars.GINMODE }} \
          --env=DBHOST=${{ vars.DBHOST }} \
          --env=DBPORT=${{ vars.DBPORT }} \
          --env=DBNAME=${{ vars.DBNAME }} \
          --env=DBUSER=${{ secrets.DBUSER }} \
          --env=DBPASS=${{ secrets.DBPASS }} \
          --env=CORSALLOWORIGIN=${{ vars.CORSALLOWORIGIN }} \
          --env=CORSALLOWHEADERS=${{ vars.CORSALLOWHEADERS }} \
          --env=CORSMAXAGE=${{ vars.CORSMAXAGE }} \
          --env=CORSALLOWCREDENTIALS=${{ vars.CORSALLOWCREDENTIALS }} \
          --env=CORSCONTENTTYPE=${{ vars.CORSCONTENTTYPE }} ${{ secrets.DOCKER_USERNAME }}/ltt-be:v1.0.dev-$SHORT_SHA
  prod_deploy:
    runs-on: [self-hosted, production]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.24'

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        SHORT_SHA=${GITHUB_SHA:0:7}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/ltt-be:v1.0.prod-$SHORT_SHA .
        docker push ${{ secrets.DOCKER_USERNAME }}/ltt-be:v1.0.prod-$SHORT_SHA

    - name: Deploy container
      run: |
        SHORT_SHA=${GITHUB_SHA:0:7}
        docker stop ltt-be || true
        docker rm ltt-be || true
        docker run --name=ltt-be -d -p 19091:19091 --env=APPNAME=${{ vars.APPNAME }} --env=APITOKEN=${{ secrets.APITOKEN }} --env=APPvars=${{ vars.APPvars }} --env=APPPORT=${{ vars.APPPORT }} --env=GINMODE=${{ vars.GINMODE }} --env=DBHOST=${{ vars.DBHOST }} --env=DBPORT=${{ vars.DBPORT }} --env=DBNAME=${{ vars.DBNAME }} --env=DBUSER=${{ secrets.DBUSER }} --env=DBPASS=${{ secrets.DBPASS }} --env=CORSALLOWORIGIN=${{ vars.CORSALLOWORIGIN }} --env=CORSALLOWHEADERS=${{ vars.CORSALLOWHEADERS }} --env=CORSMAXAGE=${{ vars.CORSMAXAGE }} --env=CORSALLOWCREDENTIALS=${{ vars.CORSALLOWCREDENTIALS }} --env=CORSCONTENTTYPE=${{ vars.CORSCONTENTTYPE }} ${{ secrets.DOCKER_USERNAME }}/ltt-be:v1.0.prod-$SHORT_SHA